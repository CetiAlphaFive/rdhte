W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2))
summary(rdhte1)
summary(rdrobust(y=Y1, x=X, vce="hc3", rho=1))
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W3)
summary(rdbwhte1)
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W1))
summary(rdbwhte1)
source("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte/R/rdbwhte.R", echo=TRUE)
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W1))
summary(rdbwhte1)
source("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte/R/rdbwhte.R", echo=TRUE)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2))
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=W3)
summary(rdhte1)
summary(rdrobust(y=Y1, x=X, vce="hc3", rho=1))
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W1))
summary(rdbwhte1)
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W3)
summary(rdbwhte1)
rdhte1$ci_rb
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W1))
summary(rdhte1)
rdhte1$ci_rb
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
source("R/rdhte.R")
source("R/rdbwhte.R")
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W1))
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W1), covs.eff=W3)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W1), covs.eff=W2)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W1), covs.eff=factor(W2))
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=factor(W1))
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=factor(W1))
summary(rdhte1)
source("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte/R/rdhte.R", echo=TRUE)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
model.matrix(W1)
model.matrix(~W1)
model.matrix(W1)
head(model.matrix~(W1))
tt= model.matrix(~W1)
tt= model.matrix(~W1)
tt= model.matrix(~W1)
head(W1)
tt= model.matrix(~factor(W1))
head(W1)
W1[1:5,]
tt= model.matrix(~factor(W1))
head(tt)
tt= model.matrix(~factor(W1)-1)
head(tt)
tt= model.matrix(~factor(W1)+0)
head(tt)
summary(rdbwselect(y=Y1, x=X, vce="hc3", covs=W1))
tt= model.matrix(~factor(W1)-1)
summary(rdbwselect(y=Y1, x=X, vce="hc3", covs=W1))
summary(rdbwselect(y=Y1, x=X, vce="hc3", covs=tt))
invisible(rdbwselect(y=Y1, x=X, vce="hc3", covs=tt))
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W3)
suppressWarnings(rdbwselect(y=Y1, x=X, vce="hc3", covs=tt))
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W3)
summary(rdbwhte1)
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W2)
summary(rdbwhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
source("R/rdhte.R")
source("R/rdbwhte.R")
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2))
summary(rdhte1)
rdhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
source("R/rdhte.R")
source("R/rdbwhte.R")
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdbwhte1)
summary(rdhte1)
rdhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=factor(W1))
summary(rdhte1)
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
source("R/rdhte.R")
source("R/rdbwhte.R")
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=factor(W1))
summary(rdhte1)
tt= model.matrix(~factor(W1)-1)
head(tt)
rm(list=ls(all=TRUE))
library("rdrobust")
library("sandwich")
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/")
source("rdhte/R/rdhte.R")
source("rdhte/R/rdbwhte.R")
#load("rdhte/data/rdhte_senate.Rdata")
df <- read.csv("rdrobust_senate.csv")
y = df$vote
x = df$margin
## RD ATE
summary(rdhte(y, x))
summary(rdrobust(y, x, vce="hc3", rho=1))
## RD HTE, using factors
W <- as.factor(df$class)
summary(rdhte(y, x, covs.hte = W))
## RD HTE, using binary orthogonal matrices
W <- model.matrix(~factor(df$class)-1)
summary(rdhte(y, x, covs.hte = W))
## RD HTE, using continuous variable
W <- df$population/mean(df$population)
summary(rdhte(y, x, covs.hte = W))
## RD HTE, using factor interactions
W <- interaction(as.factor(df$class),as.factor(1*(df$year>=median(df$year))))
summary(rdhte(y, x, covs.hte = W))
# Joint bandwidth
summary(rdhte(y, x, covs.hte = as.factor(df$class), bw.joint=TRUE))
# Manual Bandwidth
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18))
# Efficiency covariates
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18, covs.eff = df$population))
# Efficiency covariates
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18, covs.eff = as.factor(1*(df$year>=median(df$year)))))
# Efficiency covariates
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18, covs.eff = df$population))
# Cluster
summary(rdhte(y, x, covs.hte = as.factor(df$class), cluster = df$state))
# Cluster within groups
CL = interaction(as.factor(df$class),as.factor(df$state))
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18, cluster = CL))
# Two-way Cluster
summary(rdhte(y, x, covs.hte = as.factor(df$class), h = 18, cluster = df$state + df$year))
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Check package
rm(list=ls(all=TRUE))
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Check package
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Check package
rm(list=ls(all=TRUE))
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Check package
rm(list=ls(all=TRUE))
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Check package
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") --as-cran  # Check package
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
a
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
library(rdhte)
remove.packages("rdhte")
install.packages("rdhte")
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdhte)
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
rdhte1 = rdbwhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=factor(W1))
summary(rdhte1)
tt= model.matrix(~factor(W1)-1)
head(tt)
suppressWarnings(rdbwselect(y=Y1, x=X, vce="hc3", covs=tt))
rdbwhte1 = rdbwhte(y=Y1, x=X, covs.hte=W2)
summary(rdbwhte1)
y=Y1; x=X;  covs.hte=factor(W2)
c = 0; covs.eff = NULL; p = 1; kernel = "tri"; h = NULL
vce = "hc3"; cluster = NULL; level = 95; bw.joint = TRUE; cluster.joint = TRUE
########## Model 2: W2
# Estimate RDD separately for W = 1, 2, and 3
rd_results_W2_1 <- rdrobust(Y2[W2 == 1], X[W2 == 1], c = 0)
rd_results_W2_2 <- rdrobust(Y2[W2 == 2], X[W2 == 2], c = 0)
rd_results_W2_3 <- rdrobust(Y2[W2 == 3], X[W2 == 3], c = 0)
summary(rd_results_W2_1)
summary(rd_results_W2_2)
summary(rd_results_W2_3)
rdhte2 = rdhte(y=Y2, x=X,  covs.hte=factor(W2))
summary(rdhte2)
dW2 <- model.matrix(~ factor(W2) - 1)
rdhte2b = rdhte(y=Y2, x=X, covs.hte = dW2, bw.joint=TRUE)
summary(rdhte2b)
rm(list=ls(all=TRUE))
setwd("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")
library(rdrobust)
library(Hmisc)
library("sandwich")
library("lmtest")
source("R/rdhte.R")
source("R/rdbwhte.R")
# Generate data
set.seed(123)
n <- 5000
X <- runif(n, -1, 1) * 2  # Running variable in [-2,2]
# Cluster variable (C) with 10 clusters
C <- sample(1:10, n, replace = TRUE)  # categorical variable (e.g., region, firm)
# Heterogeneity variables
W1 <- rbinom(n, 1, 0.5)  # Binary variable (e.g., gender, policy group)
W2 <- sample(1:3, n, replace = TRUE)  # W takes values 1, 2, or 3
W3 <- runif(n, 0, 10)  # Continuous variable (e.g., income, age)
# Define heterogeneous treatment effects
tau_W1 <- 3 * W1  # The treatment effect depends on W
tau_W2 <- ifelse(W2 == 1, 2, ifelse(W2 == 2, 4, 6))  # Treatment effect varies by W
tau_W3 <- 2 + 0.5 * W3  # Treatment effect increases with W
# Define heterogeneous treatment effects
tau_W4 <- ifelse(W1 == 0 & W2 == 1, 2,  # Low education, male
ifelse(W1 == 0 & W2 == 2, 4,  # Medium education, male
ifelse(W1 == 0 & W2 == 3, 6,  # High education, male
ifelse(W1 == 1 & W2 == 1, 3,  # Low education, female
ifelse(W1 == 1 & W2 == 2, 5,  # Medium education, female
7)))))  # High education, female
error_term <- rep(rnorm(10, 0, 1), length.out = n)  # Cluster-level errors
epsilon <- error_term + rnorm(n)  # Add individual-level noise to the errors
# Generate outcome variable with heterogeneous treatment effect at X = 0
Y1 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W1 * (X >= 0) + rnorm(n)  # Treatment effect = 3*W at cutoff
Y2 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + rnorm(n)  # Treatment effect = tau_W at cutoff
Y3 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W3 * (X >= 0) + rnorm(n)
Y4 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W4 * (X >= 0) + rnorm(n)
Y5 <- 3 + 2 * X + 1.5 * X^2 + 0.5 * X^3 + sin(2 * X) + tau_W2 * (X >= 0) + epsilon
########## Model 1: W1
# Estimate RDD separately for W = 0 and W = 1
rd_results_W1_0 <- rdrobust(Y1[W1 == 0], X[W1 == 0], c = 0, rho=1, vce="hc0", h=0.5)
rd_results_W1_1 <- rdrobust(Y1[W1 == 1], X[W1 == 1], c = 0, rho=1, vce="hc0", h=0.5)
summary(rd_results_W1_0)
summary(rd_results_W1_1)
rdhte1 = rdhte(y=Y1, x=X, covs.hte=factor(W2), covs.eff=W1)
summary(rdhte1)
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
rm(list=ls(all=TRUE))
library(devtools)
devtools::document("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Update documentation
devtools::build("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")   # Build package
devtools::build_manual("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte") # Build manual
devtools::check("~/AdiLab Dropbox/Sebastian Calonico/2024/RD-HTE/rdhte")  # Check package
